type Book {
  id: Int!
  name: String!
  authorId: Int!
  author: Author
}

type Author {
  id: Int!
  name: String!
  books: [Book]
}

type RootQuery {
  """
  Get all authors
  """
  authors: [Author]

  """
  Get single author by Id
  """
  author(id: Int!): Author!

  """
  Get all books
  """
  books: [Book]!

  """
  Get single book by Id
  """
  book(id: Int!): Book!
}

input NewBook {
  name: String!
  authorId: Int!
}

type RootMutation {
  """
  Create a new book
  """
  addBook(newBook: NewBook): Book!
}

schema {
  query: RootQuery
  mutation: RootMutation
}
